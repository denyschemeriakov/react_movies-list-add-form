{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","clearState","setState","handleChange","event","target","name","value","handleSubmit","preventDefault","newMovie","props","addMovie","onSubmit","this","type","placeholder","onChange","required","Component","App","moviesFromServer","currentState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.649732fa.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value } as Pick<State, keyof State>);\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newMovie = { ...this.state };\n\n    this.props.addMovie(newMovie);\n\n    this.clearState();\n  };\n\n  render() {\n    return (\n      <>\n        <h3 className=\"display-6\">\n          Add new movie\n        </h3>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control mb-2\"\n              placeholder=\"Title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              required\n            />\n\n            <input\n              type=\"text\"\n              name=\"description\"\n              className=\"form-control mb-2\"\n              placeholder=\"Description\"\n              value={this.state.description}\n              onChange={this.handleChange}\n              required\n            />\n\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              className=\"form-control mb-2\"\n              placeholder=\"Image Url\"\n              value={this.state.imgUrl}\n              onChange={this.handleChange}\n              required\n            />\n\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              className=\"form-control mb-2\"\n              placeholder=\"IMDB Url\"\n              value={this.state.imdbUrl}\n              onChange={this.handleChange}\n              required\n            />\n\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              className=\"form-control mb-2\"\n              placeholder=\"IMDB Id\"\n              value={this.state.imdbId}\n              onChange={this.handleChange}\n              required\n            />\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary w-100\"\n            >\n              Add\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((currentState: State) => ({\n      movies: [...currentState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}